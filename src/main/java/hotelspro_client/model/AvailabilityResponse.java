/*
 * Hotelspro Api Client
 * Hotelspro Api Client
 *
 * OpenAPI spec version: 2.0.0
 * Contact: clientintegration@hotelspro.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hotelspro_client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import hotelspro_client.model.Policy;
import hotelspro_client.model.Room;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AvailabilityResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T16:34:00.424+03:00")
public class AvailabilityResponse {
  @SerializedName("meal_type")
  private String mealType = null;

  @SerializedName("destination_code")
  private String destinationCode = null;

  @SerializedName("nonrefundable")
  private Boolean nonrefundable = null;

  @SerializedName("offer")
  private Boolean offer = null;

  @SerializedName("checkout")
  private String checkout = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("supports_cancellation")
  private Boolean supportsCancellation = null;

  @SerializedName("hotel_code")
  private String hotelCode = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("hotel_currency")
  private String hotelCurrency = null;

  @SerializedName("hotel_price")
  private String hotelPrice = null;

  @SerializedName("checkin")
  private String checkin = null;

  @SerializedName("rooms")
  private List<Room> rooms = new ArrayList<Room>();

  @SerializedName("policies")
  private List<Policy> policies = new ArrayList<Policy>();

  @SerializedName("view")
  private Boolean view = null;

  @SerializedName("minimum_selling_price")
  private String minimumSellingPrice = null;

  @SerializedName("additional_info")
  private String additionalInfo = null;

  @SerializedName("pay_at_hotel")
  private Boolean payAtHotel = null;

  public AvailabilityResponse mealType(String mealType) {
    this.mealType = mealType;
    return this;
  }

   /**
   * Get mealType
   * @return mealType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMealType() {
    return mealType;
  }

  public void setMealType(String mealType) {
    this.mealType = mealType;
  }

  public AvailabilityResponse destinationCode(String destinationCode) {
    this.destinationCode = destinationCode;
    return this;
  }

   /**
   * Get destinationCode
   * @return destinationCode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDestinationCode() {
    return destinationCode;
  }

  public void setDestinationCode(String destinationCode) {
    this.destinationCode = destinationCode;
  }

  public AvailabilityResponse nonrefundable(Boolean nonrefundable) {
    this.nonrefundable = nonrefundable;
    return this;
  }

   /**
   * Get nonrefundable
   * @return nonrefundable
  **/
  @ApiModelProperty(value = "")
  public Boolean getNonrefundable() {
    return nonrefundable;
  }

  public void setNonrefundable(Boolean nonrefundable) {
    this.nonrefundable = nonrefundable;
  }

  public AvailabilityResponse offer(Boolean offer) {
    this.offer = offer;
    return this;
  }

   /**
   * Get offer
   * @return offer
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getOffer() {
    return offer;
  }

  public void setOffer(Boolean offer) {
    this.offer = offer;
  }

  public AvailabilityResponse checkout(String checkout) {
    this.checkout = checkout;
    return this;
  }

   /**
   * Get checkout
   * @return checkout
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCheckout() {
    return checkout;
  }

  public void setCheckout(String checkout) {
    this.checkout = checkout;
  }

  public AvailabilityResponse price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public AvailabilityResponse supportsCancellation(Boolean supportsCancellation) {
    this.supportsCancellation = supportsCancellation;
    return this;
  }

   /**
   * Get supportsCancellation
   * @return supportsCancellation
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getSupportsCancellation() {
    return supportsCancellation;
  }

  public void setSupportsCancellation(Boolean supportsCancellation) {
    this.supportsCancellation = supportsCancellation;
  }

  public AvailabilityResponse hotelCode(String hotelCode) {
    this.hotelCode = hotelCode;
    return this;
  }

   /**
   * Get hotelCode
   * @return hotelCode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getHotelCode() {
    return hotelCode;
  }

  public void setHotelCode(String hotelCode) {
    this.hotelCode = hotelCode;
  }

  public AvailabilityResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public AvailabilityResponse hotelCurrency(String hotelCurrency) {
    this.hotelCurrency = hotelCurrency;
    return this;
  }

   /**
   * Get hotelCurrency
   * @return hotelCurrency
  **/
  @ApiModelProperty(value = "")
  public String getHotelCurrency() {
    return hotelCurrency;
  }

  public void setHotelCurrency(String hotelCurrency) {
    this.hotelCurrency = hotelCurrency;
  }

  public AvailabilityResponse hotelPrice(String hotelPrice) {
    this.hotelPrice = hotelPrice;
    return this;
  }

   /**
   * Get hotelPrice
   * @return hotelPrice
  **/
  @ApiModelProperty(value = "")
  public String getHotelPrice() {
    return hotelPrice;
  }

  public void setHotelPrice(String hotelPrice) {
    this.hotelPrice = hotelPrice;
  }

  public AvailabilityResponse checkin(String checkin) {
    this.checkin = checkin;
    return this;
  }

   /**
   * Get checkin
   * @return checkin
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCheckin() {
    return checkin;
  }

  public void setCheckin(String checkin) {
    this.checkin = checkin;
  }

  public AvailabilityResponse rooms(List<Room> rooms) {
    this.rooms = rooms;
    return this;
  }

  public AvailabilityResponse addRoomsItem(Room roomsItem) {
    this.rooms.add(roomsItem);
    return this;
  }

   /**
   * Get rooms
   * @return rooms
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Room> getRooms() {
    return rooms;
  }

  public void setRooms(List<Room> rooms) {
    this.rooms = rooms;
  }

  public AvailabilityResponse policies(List<Policy> policies) {
    this.policies = policies;
    return this;
  }

  public AvailabilityResponse addPoliciesItem(Policy policiesItem) {
    this.policies.add(policiesItem);
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Policy> getPolicies() {
    return policies;
  }

  public void setPolicies(List<Policy> policies) {
    this.policies = policies;
  }

  public AvailabilityResponse view(Boolean view) {
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @ApiModelProperty(value = "")
  public Boolean getView() {
    return view;
  }

  public void setView(Boolean view) {
    this.view = view;
  }

  public AvailabilityResponse minimumSellingPrice(String minimumSellingPrice) {
    this.minimumSellingPrice = minimumSellingPrice;
    return this;
  }

   /**
   * Get minimumSellingPrice
   * @return minimumSellingPrice
  **/
  @ApiModelProperty(value = "")
  public String getMinimumSellingPrice() {
    return minimumSellingPrice;
  }

  public void setMinimumSellingPrice(String minimumSellingPrice) {
    this.minimumSellingPrice = minimumSellingPrice;
  }

  public AvailabilityResponse additionalInfo(String additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

   /**
   * Get additionalInfo
   * @return additionalInfo
  **/
  @ApiModelProperty(value = "")
  public String getAdditionalInfo() {
    return additionalInfo;
  }

  public void setAdditionalInfo(String additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  public AvailabilityResponse payAtHotel(Boolean payAtHotel) {
    this.payAtHotel = payAtHotel;
    return this;
  }

   /**
   * Get payAtHotel
   * @return payAtHotel
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getPayAtHotel() {
    return payAtHotel;
  }

  public void setPayAtHotel(Boolean payAtHotel) {
    this.payAtHotel = payAtHotel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailabilityResponse availabilityResponse = (AvailabilityResponse) o;
    return Objects.equals(this.mealType, availabilityResponse.mealType) &&
        Objects.equals(this.destinationCode, availabilityResponse.destinationCode) &&
        Objects.equals(this.nonrefundable, availabilityResponse.nonrefundable) &&
        Objects.equals(this.offer, availabilityResponse.offer) &&
        Objects.equals(this.checkout, availabilityResponse.checkout) &&
        Objects.equals(this.price, availabilityResponse.price) &&
        Objects.equals(this.supportsCancellation, availabilityResponse.supportsCancellation) &&
        Objects.equals(this.hotelCode, availabilityResponse.hotelCode) &&
        Objects.equals(this.currency, availabilityResponse.currency) &&
        Objects.equals(this.hotelCurrency, availabilityResponse.hotelCurrency) &&
        Objects.equals(this.hotelPrice, availabilityResponse.hotelPrice) &&
        Objects.equals(this.checkin, availabilityResponse.checkin) &&
        Objects.equals(this.rooms, availabilityResponse.rooms) &&
        Objects.equals(this.policies, availabilityResponse.policies) &&
        Objects.equals(this.view, availabilityResponse.view) &&
        Objects.equals(this.minimumSellingPrice, availabilityResponse.minimumSellingPrice) &&
        Objects.equals(this.additionalInfo, availabilityResponse.additionalInfo) &&
        Objects.equals(this.payAtHotel, availabilityResponse.payAtHotel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mealType, destinationCode, nonrefundable, offer, checkout, price, supportsCancellation, hotelCode, currency, hotelCurrency, hotelPrice, checkin, rooms, policies, view, minimumSellingPrice, additionalInfo, payAtHotel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailabilityResponse {\n");
    
    sb.append("    mealType: ").append(toIndentedString(mealType)).append("\n");
    sb.append("    destinationCode: ").append(toIndentedString(destinationCode)).append("\n");
    sb.append("    nonrefundable: ").append(toIndentedString(nonrefundable)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    checkout: ").append(toIndentedString(checkout)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    supportsCancellation: ").append(toIndentedString(supportsCancellation)).append("\n");
    sb.append("    hotelCode: ").append(toIndentedString(hotelCode)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    hotelCurrency: ").append(toIndentedString(hotelCurrency)).append("\n");
    sb.append("    hotelPrice: ").append(toIndentedString(hotelPrice)).append("\n");
    sb.append("    checkin: ").append(toIndentedString(checkin)).append("\n");
    sb.append("    rooms: ").append(toIndentedString(rooms)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    minimumSellingPrice: ").append(toIndentedString(minimumSellingPrice)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    payAtHotel: ").append(toIndentedString(payAtHotel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

