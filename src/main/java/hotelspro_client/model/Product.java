/*
 * Hotelspro Api Client
 * Hotelspro Api Client
 *
 * OpenAPI spec version: 2.0.0
 * Contact: clientintegration@hotelspro.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hotelspro_client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import hotelspro_client.model.Policy;
import hotelspro_client.model.Room;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Product
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T16:34:00.424+03:00")
public class Product {
  @SerializedName("code")
  private String code = null;

  @SerializedName("offer")
  private Boolean offer = null;

  @SerializedName("pay_at_hotel")
  private Boolean payAtHotel = null;

  @SerializedName("nonrefundable")
  private Boolean nonrefundable = null;

  @SerializedName("price")
  private String price = null;

  /**
   * Gets or Sets currency
   */
  @JsonAdapter(CurrencyEnum.Adapter.class)
  public enum CurrencyEnum {
    USD("USD"),
    
    EUR("EUR"),
    
    GBP("GBP"),
    
    TRY("TRY"),
    
    AED("AED");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CurrencyEnum fromValue(String text) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CurrencyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("currency")
  private CurrencyEnum currency = null;

  @SerializedName("rooms")
  private List<Room> rooms = null;

  @SerializedName("supports_cancellation")
  private Boolean supportsCancellation = null;

  @SerializedName("hotel_currency")
  private String hotelCurrency = null;

  @SerializedName("hotel_price")
  private String hotelPrice = null;

  @SerializedName("meal_type")
  private String mealType = null;

  @SerializedName("policies")
  private List<Policy> policies = null;

  @SerializedName("minimum_selling_price")
  private String minimumSellingPrice = null;

  @SerializedName("view")
  private Boolean view = null;

  public Product code(String code) {
    this.code = code;
    return this;
  }

   /**
   * product code
   * @return code
  **/
  @ApiModelProperty(value = "product code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Product offer(Boolean offer) {
    this.offer = offer;
    return this;
  }

   /**
   * Get offer
   * @return offer
  **/
  @ApiModelProperty(value = "")
  public Boolean getOffer() {
    return offer;
  }

  public void setOffer(Boolean offer) {
    this.offer = offer;
  }

  public Product payAtHotel(Boolean payAtHotel) {
    this.payAtHotel = payAtHotel;
    return this;
  }

   /**
   * Get payAtHotel
   * @return payAtHotel
  **/
  @ApiModelProperty(value = "")
  public Boolean getPayAtHotel() {
    return payAtHotel;
  }

  public void setPayAtHotel(Boolean payAtHotel) {
    this.payAtHotel = payAtHotel;
  }

  public Product nonrefundable(Boolean nonrefundable) {
    this.nonrefundable = nonrefundable;
    return this;
  }

   /**
   * Get nonrefundable
   * @return nonrefundable
  **/
  @ApiModelProperty(value = "")
  public Boolean getNonrefundable() {
    return nonrefundable;
  }

  public void setNonrefundable(Boolean nonrefundable) {
    this.nonrefundable = nonrefundable;
  }

  public Product price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public Product currency(CurrencyEnum currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public CurrencyEnum getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }

  public Product rooms(List<Room> rooms) {
    this.rooms = rooms;
    return this;
  }

  public Product addRoomsItem(Room roomsItem) {
    if (this.rooms == null) {
      this.rooms = new ArrayList<Room>();
    }
    this.rooms.add(roomsItem);
    return this;
  }

   /**
   * Get rooms
   * @return rooms
  **/
  @ApiModelProperty(value = "")
  public List<Room> getRooms() {
    return rooms;
  }

  public void setRooms(List<Room> rooms) {
    this.rooms = rooms;
  }

  public Product supportsCancellation(Boolean supportsCancellation) {
    this.supportsCancellation = supportsCancellation;
    return this;
  }

   /**
   * Get supportsCancellation
   * @return supportsCancellation
  **/
  @ApiModelProperty(value = "")
  public Boolean getSupportsCancellation() {
    return supportsCancellation;
  }

  public void setSupportsCancellation(Boolean supportsCancellation) {
    this.supportsCancellation = supportsCancellation;
  }

  public Product hotelCurrency(String hotelCurrency) {
    this.hotelCurrency = hotelCurrency;
    return this;
  }

   /**
   * Get hotelCurrency
   * @return hotelCurrency
  **/
  @ApiModelProperty(value = "")
  public String getHotelCurrency() {
    return hotelCurrency;
  }

  public void setHotelCurrency(String hotelCurrency) {
    this.hotelCurrency = hotelCurrency;
  }

  public Product hotelPrice(String hotelPrice) {
    this.hotelPrice = hotelPrice;
    return this;
  }

   /**
   * Get hotelPrice
   * @return hotelPrice
  **/
  @ApiModelProperty(value = "")
  public String getHotelPrice() {
    return hotelPrice;
  }

  public void setHotelPrice(String hotelPrice) {
    this.hotelPrice = hotelPrice;
  }

  public Product mealType(String mealType) {
    this.mealType = mealType;
    return this;
  }

   /**
   * Get mealType
   * @return mealType
  **/
  @ApiModelProperty(value = "")
  public String getMealType() {
    return mealType;
  }

  public void setMealType(String mealType) {
    this.mealType = mealType;
  }

  public Product policies(List<Policy> policies) {
    this.policies = policies;
    return this;
  }

  public Product addPoliciesItem(Policy policiesItem) {
    if (this.policies == null) {
      this.policies = new ArrayList<Policy>();
    }
    this.policies.add(policiesItem);
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @ApiModelProperty(value = "")
  public List<Policy> getPolicies() {
    return policies;
  }

  public void setPolicies(List<Policy> policies) {
    this.policies = policies;
  }

  public Product minimumSellingPrice(String minimumSellingPrice) {
    this.minimumSellingPrice = minimumSellingPrice;
    return this;
  }

   /**
   * Get minimumSellingPrice
   * @return minimumSellingPrice
  **/
  @ApiModelProperty(value = "")
  public String getMinimumSellingPrice() {
    return minimumSellingPrice;
  }

  public void setMinimumSellingPrice(String minimumSellingPrice) {
    this.minimumSellingPrice = minimumSellingPrice;
  }

  public Product view(Boolean view) {
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @ApiModelProperty(value = "")
  public Boolean getView() {
    return view;
  }

  public void setView(Boolean view) {
    this.view = view;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.code, product.code) &&
        Objects.equals(this.offer, product.offer) &&
        Objects.equals(this.payAtHotel, product.payAtHotel) &&
        Objects.equals(this.nonrefundable, product.nonrefundable) &&
        Objects.equals(this.price, product.price) &&
        Objects.equals(this.currency, product.currency) &&
        Objects.equals(this.rooms, product.rooms) &&
        Objects.equals(this.supportsCancellation, product.supportsCancellation) &&
        Objects.equals(this.hotelCurrency, product.hotelCurrency) &&
        Objects.equals(this.hotelPrice, product.hotelPrice) &&
        Objects.equals(this.mealType, product.mealType) &&
        Objects.equals(this.policies, product.policies) &&
        Objects.equals(this.minimumSellingPrice, product.minimumSellingPrice) &&
        Objects.equals(this.view, product.view);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, offer, payAtHotel, nonrefundable, price, currency, rooms, supportsCancellation, hotelCurrency, hotelPrice, mealType, policies, minimumSellingPrice, view);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    payAtHotel: ").append(toIndentedString(payAtHotel)).append("\n");
    sb.append("    nonrefundable: ").append(toIndentedString(nonrefundable)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    rooms: ").append(toIndentedString(rooms)).append("\n");
    sb.append("    supportsCancellation: ").append(toIndentedString(supportsCancellation)).append("\n");
    sb.append("    hotelCurrency: ").append(toIndentedString(hotelCurrency)).append("\n");
    sb.append("    hotelPrice: ").append(toIndentedString(hotelPrice)).append("\n");
    sb.append("    mealType: ").append(toIndentedString(mealType)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    minimumSellingPrice: ").append(toIndentedString(minimumSellingPrice)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

